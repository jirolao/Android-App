{"version":3,"file":"VisitorLogger.js","names":["aggregateInfo","info","Array","isArray","reduce","acc","concat","String","dependency","getGLName","initialObj","textureOptions","VisitorLogger","Visitor","onSurfaceGLContextChange","surface","gl","log","onSurfaceDrawSkipped","onSurfaceDrawStart","width","height","getGLSize","console","groupCollapsed","groupNestedLvl","onSurfaceDrawError","e","error","groupEnd","onSurfaceDrawEnd","onNodeDrawSkipped","node","context","glSurface","_needsRedraw","onNodeDrawStart","group","onNodeSyncDeps","additions","deletions","length","map","n","join","onNodeDraw","preparedUniforms","blendFunc","clear","props","w","h","JSON","stringify","forEach","obj","key","type","value","getMetaInfo","values","undefined","v","spaces","i","onNodeDrawEnd"],"sources":["../src/VisitorLogger.js"],"sourcesContent":["//@flow\n/* eslint-disable no-console */\nimport log from \"./helpers/log\";\nimport type { Surface } from \"./createSurface\";\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\nimport Visitor from \"./Visitor\";\n\nconst aggregateInfo = (info) =>\n  Array.isArray(info)\n    ? info.reduce((acc, info) => acc.concat(aggregateInfo(info)), [])\n    : [\n        String(\n          (info.dependency && info.dependency.getGLName()) || info.initialObj\n        ),\n      ].concat(info.textureOptions ? [info.textureOptions] : []);\n\n/**\n *\n */\nexport default class VisitorLogger extends Visitor {\n  groupNestedLvl = 0;\n  onSurfaceGLContextChange(surface: Surface, gl: ?WebGLRenderingContext) {\n    if (gl) {\n      log(surface.getGLName() + \" _context acquired_\");\n    } else {\n      log(surface.getGLName() + \" _context lost_\");\n    }\n  }\n  onSurfaceDrawSkipped() {}\n  onSurfaceDrawStart(surface: Surface) {\n    const [width, height] = surface.getGLSize();\n    console.groupCollapsed(\"Surface draw\");\n    this.groupNestedLvl = 1;\n    log(\"_size_ `\" + width + \"`x`\" + height + \"`\");\n  }\n  onSurfaceDrawError(e: Error) {\n    console.error(e);\n    while (this.groupNestedLvl > 0) {\n      console.groupEnd();\n      this.groupNestedLvl--;\n    }\n    return true;\n  }\n  onSurfaceDrawEnd() {\n    this.groupNestedLvl--;\n    console.groupEnd();\n  }\n  onNodeDrawSkipped(node: Node) {\n    log(\n      node.getGLName() +\n        \" redraw _skipped_: \" +\n        (!node.context.glSurface.gl\n          ? \"no gl context available!\"\n          : !node._needsRedraw\n          ? \"no need to redraw\"\n          : \"\")\n    );\n  }\n  onNodeDrawStart(node: Node) {\n    this.groupNestedLvl++;\n    console.group(node.getGLName());\n  }\n  onNodeSyncDeps(\n    node: Node,\n    additions: Array<Bus | Node>,\n    deletions: Array<Bus | Node>\n  ) {\n    if (additions.length)\n      console.log(\n        node.getGLName() +\n          \" +deps \" +\n          additions.map((n) => n.getGLName()).join(\", \")\n      );\n    if (deletions.length)\n      console.log(\n        node.getGLName() +\n          \" -deps \" +\n          additions.map((n) => n.getGLName()).join(\", \")\n      );\n  }\n  onNodeDraw(node: Node, preparedUniforms: Array<*>) {\n    const { blendFunc, clear } = node.props;\n    this.groupNestedLvl++;\n    console.group(\"DRAW \" + node.getGLName());\n    const [w, h] = node.getGLSize();\n    log(\n      \"_size_ `\" +\n        w +\n        \"`x`\" +\n        h +\n        \"` \" +\n        \"_clear_ `\" +\n        JSON.stringify(clear) +\n        \"` \" +\n        \"_blendFunc_ `\" +\n        JSON.stringify(blendFunc) +\n        \"`\"\n    );\n    log(\"_\" + preparedUniforms.length + \" uniforms:_\");\n    preparedUniforms.forEach((obj) => {\n      let { key, type, value, getMetaInfo } = obj;\n      type = String(type || \"UNKNOWN\");\n      const values =\n        value === undefined\n          ? \"\"\n          : Array.isArray(value)\n          ? \"[\" + value.map((v) => \"`\" + String(v) + \"`\").join(\",\") + \"]\"\n          : \"`\" + String(value) + \"`\";\n      let spaces = \"\";\n      for (let i = type.length + key.length - 18; i < 0; i++) {\n        spaces += \" \";\n      }\n      log(\n        `${spaces}*${\n          type === \"UNKNOWN\" ? \"[c='color:red']UNKNOWN[c]\" : type\n        }* _${key}_ = ${values}`,\n        ...(getMetaInfo ? aggregateInfo(getMetaInfo()) : [])\n      );\n    });\n  }\n  onNodeDrawEnd() {\n    this.groupNestedLvl -= 2;\n    console.groupEnd();\n    console.groupEnd();\n  }\n}\n"],"mappings":"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"}