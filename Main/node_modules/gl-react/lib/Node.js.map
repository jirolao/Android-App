{"version":3,"file":"Node.js","names":["blendFuncAliases","zero","one","isBackbuffer","obj","console","warn","Uniform","Backbuffer","isBackbufferFrom","type","isTextureSizeGetter","nodeWidthHeight","width","height","glSizable","cw","ch","getGLSize","mapBlendFunc","gl","name","id","parseWrap","w","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","mergeArrays","a","b","t","length","Math","max","i","parseInterpolation","LINEAR","NEAREST","createFBO","handle","createFramebuffer","bindFramebuffer","FRAMEBUFFER","color","createTexture","Error","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","bind","viewport","syncSize","h","dispose","deleteFramebuffer","deleteTexture","defaultTextureOptions","interpolation","wrap","applyTextureOptions","partialOpts","opts","filter","wrapS","wrapT","Array","isArray","NodePropTypes","shader","PropTypes","object","isRequired","uniformsOptions","uniforms","ignoreUnusedUniforms","any","sync","bool","number","children","backbuffering","blendFunc","clear","onDraw","func","Node","Component","props","genId","uniform","value","index","React","isValidElement","redraw","key","map","v","_resolveElement","_needsRedraw","dependents","forEach","d","context","glSurface","_draw","getChildContext","glParent","componentDidMount","_prepareGLObjects","_addGLNodeChild","flush","componentWillUnmount","capturePixelsArray","_destroyGLObjects","pool","freeUint8","_removeGLNodeChild","dependencies","_removeDependent","_syncNextDrawProps","nextProps","nextContext","nextWidthHeight","framebuffer","backbuffer","invariant","drawProps","render","RenderLessElement","Object","keys","_renderUniformElement","componentDidUpdate","getGLShortName","shaderName","isShaderIdentifier","Shaders","getShortName","getGLName","getName","getGLOutput","getGLBackbufferOutput","setDrawProps","patch","capture","x","y","undefined","size","pixels","_captureAlloc","_bind","readPixels","ndarray","step","transpose","glIsAvailable","_shader","fbo","_onContextLost","_onContextRestored","node","_addUniformBus","uniformBus","uniformName","array","uniformsBus","_removeUniformBus","_addDependent","indexOf","invariantNoDependentsLoop","push","splice","_syncDependencies","newdeps","olddeps","additions","deletions","_bindRootNode","mallocUint8","_getShader","shaderProp","nodeName","shaderInfo","shaderDefinitionToShaderInfo","ensureShaderDefinition","latestShaderInfo","_latestShaderInfo","shaderInfoEquals","_makeShader","visitors","getVisitors","onNodeDrawSkipped","nw","nh","types","glRedrawableDependencies","pendingTextures","units","usedUniforms","providedUniforms","k","textureUnits","Map","prepareTexture","initialObj","uniformOptions","uniformKeyName","dependency","result","glNode","glNodePickBackbuffer","Bus","getGLRenderableNode","renderable","getGLRenderableContent","directTexture","loader","input","_resolveTextureLoader","get","update","texture","directTextureSize","p","load","textureOptions","getMetaInfo","getSize","fallback","prepare","getEmptyTexture","has","activeTexture","TEXTURE0","set","prepareUniform","uniformType","ignoredWarn","includes","uniformValue","Resolution","ratio","values","all","reduce","acc","o","concat","preparedUniforms","u","join","Promise","then","onNodeDrawStart","onNodeSyncDeps","drawDep","onNodeDraw","src","dst","clearColor","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","onNodeDrawEnd"],"sources":["../src/Node.js"],"sourcesContent":["//@flow\nimport invariant from \"invariant\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport pool from \"typedarray-pool\";\nimport ndarray from \"ndarray\";\nimport Uniform from \"./Uniform\";\nimport Bus from \"./Bus\";\nimport Shaders, {\n  isShaderIdentifier,\n  ensureShaderDefinition,\n  shaderDefinitionToShaderInfo,\n  shaderInfoEquals,\n} from \"./Shaders\";\nimport invariantNoDependentsLoop from \"./helpers/invariantNoDependentsLoop\";\nimport genId from \"./genId\";\nimport type { Shader } from \"gl-shader\";\nimport type { NDArray } from \"ndarray\";\nimport type { ShaderIdentifier, ShaderInfo, ShaderDefinition } from \"./Shaders\";\nimport type { Surface, SurfaceContext } from \"./createSurface\";\n\nconst blendFuncAliases = {\n  zero: \"ZERO\",\n  one: \"ONE\",\n  \"src color\": \"SRC_COLOR\",\n  \"one minus src color\": \"ONE_MINUS_SRC_COLOR\",\n  \"src alpha\": \"SRC_ALPHA\",\n  \"one minus src alpha\": \"ONE_MINUS_SRC_ALPHA\",\n  \"dst color\": \"DST_COLOR\",\n  \"one minus dst color\": \"ONE_MINUS_DST_COLOR\",\n  \"dst alpha\": \"DST_ALPHA\",\n  \"one minus dst alpha\": \"ONE_MINUS_DST_ALPHA\",\n  \"constant color\": \"CONSTANT_COLOR\",\n  \"one minus constant color\": \"ONE_MINUS_CONSTANT_COLOR\",\n  \"constant alpha\": \"CONSTANT_ALPHA\",\n  \"one minus constant alpha\": \"ONE_MINUS_CONSTANT_ALPHA\",\n  \"src alpha saturate\": \"SRC_ALPHA_SATURATE\",\n};\n\n/**\n * The texture pixel interpolation mode.\n *\n * One of:\n * - `linear`\n * - `nearest`\n */\ntype Interpolation = \"linear\" | \"nearest\";\n\n/**\n * A texture wrap mode define how the texture lookup repeat over edges.\n *\n * One of:\n * - `clamp to edge`\n * - `repeat`\n * - `mirrored repeat`\n */\ntype WrapMode = \"clamp to edge\" | \"repeat\" | \"mirrored repeat\";\n\n/**\n * Options on a texture.\n * - interpolation define how the pixel lookup get mapped to screen.\n * - wrap define how the edge lookup behaves. It can be either a [x,y] wrap or a wrap value for both.\n */\ntype TextureOptions = {\n  interpolation: Interpolation,\n  wrap: [WrapMode, WrapMode] | WrapMode,\n};\n\n/**\n * The GL blending function.\n *\n * One of:\n * - `zero`\n * - `one`\n * - `src color`\n * - `one minus src color`\n * - `src alpha`\n * - `one minus src alpha`\n * - `dst color`\n * - `one minus dst color`\n * - `dst alpha`\n * - `one minus dst alpha`\n * - `constant color`\n * - `one minus constant color`\n * - `constant alpha`\n * - `one minus constant alpha`\n * - `src alpha saturate`\n */\ntype BlendFunc = $Keys<typeof blendFuncAliases>;\n\n/**\n *\n */\ntype BlendFuncSrcDst = {|\n  src: BlendFunc,\n  dst: BlendFunc,\n|};\n\n/**\n * Array of 4 numbers. Useful to represent colors. *[ r, g, b, a ]*\n */\ntype Vec4 = [number, number, number, number];\n\n/**\n * The GL clear mode.\n */\ntype Clear = {|\n  color: Vec4,\n|};\n\n/**\n * Uniforms is an map object from uniform name to a value.\n *\n * **The library support numerous uniform types via different formats.\n * Let's describe them:**\n *\n * ### int or float\n *\n * a JavaScript number\n *\n * ### bool\n *\n * a JavaScript Boolean\n *\n * ### int[], float[], bool[] arrays\n *\n * an array of the number (0/1 for bool can be used as well as bools)\n *\n * ### vec2, vec3, vec4\n *\n * an array of number, of size respectively 2, 3 and 4.\n *\n * > same is available for ivec* variants.\n *\n * ### mat2, mat3, mat4\n *\n * Similarly to vectorial types, you can pass an array of numbers.\n * For matrix, you actually define them in a flatten way (not arrays of arrays).\n *\n * ### sampler2D type (aka texture)\n *\n * The library support numerous and extensible uniform value format.\n *\n * **FIXME: to be documented.**\n *\n * ### struct types\n *\n * Consider it unsupported even though it *might* work since gl-react is based on `gl-shader`.\n *\n */\ntype Uniforms = {\n  [_: string]: mixed,\n};\n\ntype UniformsOptions = {\n  [_: string]: ?$Shape<TextureOptions>,\n};\n\ntype Props = {|\n  shader: ShaderIdentifier | ShaderDefinition,\n  uniformsOptions: UniformsOptions,\n  uniforms: Uniforms,\n  ignoreUnusedUniforms?: Array<string> | boolean,\n  sync?: boolean,\n  width?: number,\n  height?: number,\n  children?: any,\n  backbuffering?: boolean,\n  blendFunc: BlendFuncSrcDst,\n  clear: ?Clear,\n  onDraw?: () => void,\n|};\n\n// not sure why, but we must define this for Flow to properly type check\ntype DefaultProps = {\n  uniformsOptions: UniformsOptions,\n  uniforms: Uniforms,\n  blendFunc: BlendFuncSrcDst,\n  clear: ?Clear,\n};\n\ntype AsyncMixed = (redraw?: () => void) => mixed;\n\nconst isBackbuffer = (obj: *) => {\n  if (obj === \"Backbuffer\") {\n    console.warn(\n      'Backbuffer is deprecated, use Uniform.Backbuffer instead: `import {Uniform} from \"gl-react\"`'\n    );\n    return true;\n  }\n  return obj === Uniform.Backbuffer;\n};\n\nconst isBackbufferFrom = (obj: *) =>\n  obj && typeof obj === \"object\" && obj.type === \"BackbufferFrom\";\n\nconst isTextureSizeGetter = (obj: *) =>\n  obj && typeof obj === \"object\" && obj.type === \"TextureSize\";\n\nconst nodeWidthHeight = (\n  { width, height }: Props,\n  { glSizable }: SurfaceContext\n): [number, number] => {\n  if (width && height) return [width, height];\n  const [cw, ch] = glSizable.getGLSize();\n  return [width || cw, height || ch];\n};\n\nconst mapBlendFunc = (gl: WebGLRenderingContext, name: BlendFunc): ?number => {\n  // $FlowFixMe\n  if (name in gl) return gl[name];\n  if (name in blendFuncAliases) {\n    const id = blendFuncAliases[name];\n    // $FlowFixMe\n    if (id in gl) return gl[id];\n  }\n  console.warn(\"Invalid blendFunc. Got:\", name);\n};\n\nconst parseWrap = (gl: WebGLRenderingContext, w: string): number => {\n  switch (w) {\n    case \"clamp to edge\":\n      return gl.CLAMP_TO_EDGE;\n    case \"repeat\":\n      return gl.REPEAT;\n    case \"mirrored repeat\":\n      return gl.MIRRORED_REPEAT;\n    default:\n      console.warn(\"Invalid wrap. Got:\", w);\n      return gl.CLAMP_TO_EDGE;\n  }\n};\n\nconst mergeArrays = (a: Array<*>, b: Array<*>): Array<*> => {\n  const t = [];\n  const length = Math.max(a.length, b.length);\n  for (let i = 0; i < length; i++) {\n    t[i] = b[i] || a[i];\n  }\n  return t;\n};\n\nconst parseInterpolation = (gl: WebGLRenderingContext, i: string): number => {\n  switch (i) {\n    case \"linear\":\n      return gl.LINEAR;\n    case \"nearest\":\n      return gl.NEAREST;\n    default:\n      console.warn(\"Invalid interpolation. Got:\", i);\n      return gl.LINEAR;\n  }\n};\n\ntype Framebuffer = {\n  handle: WebGLFramebuffer,\n  color: WebGLTexture,\n  bind: () => void,\n  dispose: () => void,\n  syncSize: (w: number, h: number) => void,\n};\n\n// minimal version of gl-fbo\nconst createFBO = (\n  gl: WebGLRenderingContext,\n  width: number,\n  height: number\n): Framebuffer => {\n  var handle = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, handle);\n  var color = gl.createTexture();\n  if (!color) throw new Error(\"createTexture returned null\");\n  gl.bindTexture(gl.TEXTURE_2D, color);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGBA,\n    width,\n    height,\n    0,\n    gl.RGBA,\n    gl.UNSIGNED_BYTE,\n    null\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    color,\n    0\n  );\n  return {\n    handle,\n    color,\n    bind: () => {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, handle);\n      gl.viewport(0, 0, width, height);\n    },\n    syncSize: (w: number, h: number) => {\n      if (w !== width || h !== height) {\n        width = w;\n        height = h;\n        gl.bindTexture(gl.TEXTURE_2D, color);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.RGBA,\n          w,\n          h,\n          0,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          null\n        );\n      }\n    },\n    dispose: () => {\n      gl.deleteFramebuffer(handle);\n      gl.deleteTexture(color);\n    },\n  };\n};\n\nconst defaultTextureOptions: TextureOptions = {\n  interpolation: \"linear\",\n  wrap: [\"clamp to edge\", \"clamp to edge\"],\n};\n\nconst applyTextureOptions = (\n  gl: WebGLRenderingContext,\n  partialOpts: ?$Shape<TextureOptions>\n) => {\n  const opts: TextureOptions = { ...defaultTextureOptions, ...partialOpts };\n  let filter = parseInterpolation(gl, opts.interpolation);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  let wrapS, wrapT;\n  if (Array.isArray(opts.wrap)) {\n    if (opts.wrap.length !== 2) {\n      console.warn(\n        \"textureOptions wrap: should be an array of 2 values. Got:\",\n        opts.wrap\n      );\n      wrapS = wrapT = gl.CLAMP_TO_EDGE;\n    } else {\n      wrapS = parseWrap(gl, opts.wrap[0]);\n      wrapT = parseWrap(gl, opts.wrap[1]);\n    }\n  } else {\n    wrapS = wrapT = parseWrap(gl, opts.wrap);\n  }\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n};\n\nconst NodePropTypes = {\n  shader: PropTypes.object.isRequired,\n  uniformsOptions: PropTypes.object,\n  uniforms: PropTypes.object,\n  ignoreUnusedUniforms: PropTypes.any,\n  sync: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  children: PropTypes.any,\n  backbuffering: PropTypes.bool,\n  blendFunc: PropTypes.object,\n  clear: PropTypes.object,\n  onDraw: PropTypes.func,\n};\n\n/**\n * `<Node>` is the primitive that renders a shader program into a Framebuffer.\n * It can be composed with other `Node` via using a sampler2D uniforms.\n *\n * @prop {ShaderIdentifier} shader - created with `Shaders.create`\n * @prop {Uniforms} [uniforms] - uniform values that gets passed to the fragment shader.\n * @prop {Object} [uniformsOptions] - allows to configure things like interpolation of a sampler2D texture.\n * @prop {number} [width] - the width in in real pixels unit (unlike Surface, no pixel ratio)\n * @prop {number} [height] - the height in in real pixels unit (unlike Surface, no pixel ratio)\n * @prop {bool} [sync] - If true, a React update will always force a sync redraw of the Node framebuffer.\n * @prop {bool} [backbuffering] - enable the backbuffering that allows to use `Backbuffer` in uniforms to get the previous framebuffer texture state in the fragment shader.\n * @prop {BlendFuncSrcDst} [blendFunc] - configure the blending function to use\n * @prop {Clear} [clear] - configure the clear to use (color,...)\n * @prop {Function} [onDraw] - a callback called each time a draw was produced for this Node.\n * @prop {any} [children] - in advanced use-cases, you can render things like Bus or contents to be used by Node\n * @prop {any} [ignoreUnusedUniforms] - ignore all or some uniforms to be warned if they are not existing or used in the actual shader code (by default it's good for dev to warn them but they are usecase where it's not easy to know, like if the GLSL code come from the user). boolean to ignore all or whitelist array of uniforms name to ignore.\n * @example\n *  <Node shader={shaders.helloGL} />\n */\nexport default class Node extends Component<Props, *> {\n  drawProps: Props = this.props;\n  context: SurfaceContext;\n  framebuffer: ?Framebuffer;\n  backbuffer: ?Framebuffer;\n  _needsRedraw: boolean = false;\n  capturePixelsArray: ?Uint8Array;\n  id: number = genId();\n  uniformsBus: { [key: string]: Array<?Bus> } = {};\n  dependencies: Array<Node | Bus> = []; // Node this instance depends on\n  dependents: Array<Node | Surface> = []; // Node/Surface that depends on this instance\n\n  static propTypes = NodePropTypes;\n\n  static defaultProps: DefaultProps = {\n    uniformsOptions: {},\n    uniforms: {},\n    blendFunc: {\n      // FIXME should this actually just be null by default? opt-in?\n      src: \"src alpha\",\n      dst: \"one minus src alpha\",\n    },\n    clear: {\n      color: [0, 0, 0, 0],\n    },\n  };\n\n  static contextTypes = {\n    glParent: PropTypes.object.isRequired,\n    glSurface: PropTypes.object.isRequired,\n    glSizable: PropTypes.object.isRequired,\n  };\n\n  static childContextTypes = {\n    glParent: PropTypes.object.isRequired,\n    glSizable: PropTypes.object.isRequired,\n  };\n\n  getChildContext() {\n    return {\n      glParent: this,\n      glSizable: this,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      glSurface: { gl },\n    } = this.context;\n    if (gl) this._prepareGLObjects(gl);\n    this.context.glParent._addGLNodeChild(this);\n    this.redraw();\n    if (this.props.sync) this.flush();\n  }\n\n  componentWillUnmount() {\n    const { capturePixelsArray } = this;\n    this._destroyGLObjects();\n    if (capturePixelsArray) {\n      pool.freeUint8(capturePixelsArray);\n    }\n    this._needsRedraw = false;\n    this.context.glParent._removeGLNodeChild(this);\n    this.dependencies.forEach((d) => d._removeDependent(this));\n  }\n\n  _syncNextDrawProps(nextProps: Props, nextContext: *) {\n    const nextWidthHeight = nodeWidthHeight(nextProps, nextContext);\n    if (this.framebuffer) {\n      this.framebuffer.syncSize(...nextWidthHeight);\n    }\n    if (this.backbuffer) {\n      this.backbuffer.syncSize(...nextWidthHeight);\n    }\n    invariant(\n      nextProps.backbuffering === this.drawProps.backbuffering,\n      \"Node backbuffering prop must not changed. (not yet supported)\"\n    );\n    this.drawProps = nextProps;\n  }\n\n  _resolveElement = (\n    uniform: string,\n    value: mixed,\n    index: number\n  ): ?React$Element<*> => {\n    if (!React.isValidElement(value)) {\n      if (typeof value === \"function\") {\n        value = (value: AsyncMixed)(this.redraw);\n        if (!React.isValidElement(value)) {\n          return; // the function don't return an Element, skip\n        }\n      } else {\n        return; // the value isn't an Element, skip\n      }\n    }\n    return (\n      <Bus\n        key={uniform + (index ? \".\" + index : \"\")}\n        uniform={uniform}\n        index={index}\n      >\n        {value}\n      </Bus>\n    );\n  };\n\n  _renderUniformElement = (key: string) => {\n    const { uniforms } = this.props;\n    let value = uniforms[key];\n    return Array.isArray(value)\n      ? value.map((v, i) => this._resolveElement(key, v, i))\n      : this._resolveElement(key, value, 0);\n  };\n\n  render() {\n    const { children, uniforms } = this.props;\n    const {\n      glSurface: { RenderLessElement },\n    } = this.context;\n    return (\n      <RenderLessElement>\n        {children}\n        {Object.keys(uniforms).map(this._renderUniformElement)}\n      </RenderLessElement>\n    );\n  }\n\n  componentDidUpdate() {\n    this._syncNextDrawProps(this.props, this.context);\n    this.redraw();\n    if (this.props.sync) this.flush();\n  }\n\n  getGLShortName(): string {\n    const { shader } = this.drawProps;\n    const shaderName = isShaderIdentifier(shader)\n      ? // $FlowFixMe FIXME\n        Shaders.getShortName(shader)\n      : \"<inline>\";\n    return `Node(${shaderName})`;\n  }\n\n  getGLName(): string {\n    const { shader } = this.drawProps;\n    const shaderName = isShaderIdentifier(shader)\n      ? // $FlowFixMe FIXME\n        Shaders.getName(shader)\n      : \"<inline>\";\n    return `Node#${this.id}(${shaderName})`;\n  }\n\n  getGLSize(): [number, number] {\n    return nodeWidthHeight(this.drawProps, this.context);\n  }\n\n  getGLOutput(): WebGLTexture {\n    const { framebuffer } = this;\n    invariant(\n      framebuffer,\n      \"Node#getGLOutput: framebuffer is not defined. It cannot be called on a root Node\"\n    );\n    return framebuffer.color;\n  }\n\n  getGLBackbufferOutput(): WebGLTexture {\n    const { backbuffer } = this;\n    invariant(\n      backbuffer,\n      \"Node#getGLBackbufferOutput: backbuffer is not defined. Make sure `backbuffering` prop is defined\"\n    );\n    return backbuffer.color;\n  }\n\n  /**\n   * Imperatively set the props with a partial subset of props to apply.\n   * This is an escape hatch to perform a redraw with different props without having to trigger a new React draw. Only use it when reaching a performance bottleneck.\n   * NB: at any time, render() needs to consistently render the same props you set in setDrawProps to avoid any potential blink (if a React draw would occur).\n   * @param {Props} patch a subset of props to apply on top of the previous draw props.\n   */\n  setDrawProps(patch: $Shape<Props>) {\n    // $FlowFixMe\n    const nextProps: Props = {\n      ...this.drawProps,\n      ...patch,\n    };\n    this._syncNextDrawProps(nextProps, this.context);\n    this.redraw();\n    if (nextProps.sync) this.flush();\n  }\n\n  /**\n   * Capture the node pixels.\n   * Without parameters, it will capture the full rectangle,\n   * otherwise you can provide (x, y) or (x, y, w, h) to provide a subset of this rectangle.\n   */\n  capture(x?: number, y?: number, w?: number, h?: number): NDArray {\n    const [width, height] = this.getGLSize();\n    const { gl } = this.context.glSurface;\n    invariant(gl, \"gl is no longer available\");\n    if (x === undefined) x = 0;\n    if (y === undefined) y = 0;\n    if (w === undefined) w = width - x;\n    if (h === undefined) h = height - y;\n    invariant(\n      x >= 0 && x + w <= width && y >= 0 && y + h <= height,\n      \"capture(%s,%s,%s,%s): requested rectangle is out of bounds (%s,%s)\",\n      x,\n      y,\n      w,\n      h,\n      width,\n      height\n    );\n    const size = w * h * 4;\n    const pixels: Uint8Array = this._captureAlloc(size);\n    this._bind();\n    gl.readPixels(x, y, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return ndarray(pixels, [h, w, 4]).step(-1, 1, 1).transpose(1, 0, 2);\n  }\n\n  /**\n   * Schedule a redraw of this node and all dependent nodes.\n   *\n   * @function\n   */\n  redraw = (): void => {\n    if (!this._needsRedraw) {\n      this._needsRedraw = true;\n      this.dependents.forEach((d) => d.redraw());\n    }\n  };\n\n  /**\n   * Force the redraw (if any) to happen now, synchronously.\n   *\n   * @function\n   */\n  flush = (): void => {\n    this.context.glSurface._draw();\n  };\n\n  _destroyGLObjects(): void {\n    const { glSurface } = this.context;\n    if (glSurface.glIsAvailable()) {\n      // We should only dispose() if gl is still here.\n      // otherwise, GL should already have free resources.\n      // (also workaround for https://github.com/stackgl/headless-gl/issues/90)\n      const { framebuffer, backbuffer, _shader } = this;\n      if (_shader) {\n        _shader.dispose();\n      }\n      if (framebuffer) {\n        framebuffer.dispose();\n      }\n      if (backbuffer) {\n        backbuffer.dispose();\n      }\n    }\n    delete this._shader;\n    delete this.framebuffer;\n    delete this.backbuffer;\n  }\n\n  _prepareGLObjects(gl: WebGLRenderingContext): void {\n    const [width, height] = this.getGLSize();\n    const { glParent, glSurface } = this.context;\n    if (glParent === glSurface) {\n      // my parent IS the glSurface, should prevent from creating a FBO.\n      // when a FBO is not created, _draw() happens on the final Canvas (null fbo)\n      // NB we can just do this in WillMount because this context will not change.\n      invariant(\n        !this.drawProps.backbuffering,\n        \"`backbuffering` is currently not supported for a Root Node. \" +\n          \"Try to wrap %s in a <LinearCopy> or <NearestCopy>.\",\n        this.getGLName()\n      );\n    } else {\n      const fbo = createFBO(gl, width, height);\n      this.framebuffer = fbo;\n      if (this.drawProps.backbuffering) {\n        const fbo = createFBO(gl, width, height);\n        this.backbuffer = fbo;\n      }\n    }\n  }\n\n  _onContextLost(): void {\n    this.dependencies.forEach((d) => d._onContextLost());\n    this._destroyGLObjects();\n  }\n\n  _onContextRestored(gl: WebGLRenderingContext): void {\n    this._prepareGLObjects(gl);\n    this.dependencies.forEach((d) => d._onContextRestored(gl));\n    this._needsRedraw = true;\n  }\n\n  _addGLNodeChild(node: Node) {}\n  _removeGLNodeChild(node: Node) {}\n\n  _addUniformBus(uniformBus: Bus, uniformName: string, index: number): void {\n    const array =\n      this.uniformsBus[uniformName] || (this.uniformsBus[uniformName] = []);\n    array[index] = uniformBus;\n  }\n\n  _removeUniformBus(uniformBus: Bus, uniformName: string, index: number): void {\n    const array =\n      this.uniformsBus[uniformName] || (this.uniformsBus[uniformName] = []);\n    if (array[index] === uniformBus) {\n      array[index] = null;\n    }\n  }\n\n  _addDependent(node: Node | Surface): void {\n    const i = this.dependents.indexOf(node);\n    if (i === -1) {\n      invariantNoDependentsLoop(this, node);\n      this.dependents.push(node);\n    }\n  }\n\n  _removeDependent(node: Node | Surface): void {\n    const i = this.dependents.indexOf(node);\n    if (i !== -1) {\n      this.dependents.splice(i, 1);\n    }\n  }\n\n  _syncDependencies(\n    newdeps: Array<Node | Bus>\n  ): [Array<Bus | Node>, Array<Bus | Node>] {\n    const olddeps = this.dependencies;\n    const additions = newdeps.filter((node) => olddeps.indexOf(node) === -1);\n    const deletions = olddeps.filter((node) => newdeps.indexOf(node) === -1);\n    additions.forEach((d) => d._addDependent(this));\n    deletions.forEach((d) => d._removeDependent(this));\n    this.dependencies = newdeps;\n    return [additions, deletions];\n  }\n\n  _bind(): void {\n    if (this.framebuffer) {\n      this.framebuffer.bind();\n    } else {\n      this.context.glSurface._bindRootNode();\n    }\n  }\n\n  _captureAlloc(size: number): Uint8Array {\n    let { capturePixelsArray } = this;\n    if (capturePixelsArray && size !== capturePixelsArray.length) {\n      pool.freeUint8(capturePixelsArray);\n      capturePixelsArray = null;\n    }\n    const pixels: Uint8Array = capturePixelsArray || pool.mallocUint8(size);\n    this.capturePixelsArray = pixels;\n    return pixels;\n  }\n\n  _latestShaderInfo: ?ShaderInfo;\n  _shader: ?Shader; // in case of inline shader, a Node currently hold a Node\n\n  _getShader(shaderProp: mixed): Shader {\n    const { glSurface } = this.context;\n    const nodeName = this.getGLName();\n    invariant(shaderProp, nodeName + \": shader prop must be provided\");\n    if (isShaderIdentifier(shaderProp)) {\n      // $FlowFixMe\n      return glSurface._getShader(shaderProp);\n    }\n\n    const shaderInfo = shaderDefinitionToShaderInfo(\n      ensureShaderDefinition(shaderProp, \" in \" + nodeName),\n      nodeName\n    );\n    const latestShaderInfo = this._latestShaderInfo;\n    let shader = this._shader;\n    if (\n      !shader ||\n      !latestShaderInfo ||\n      !shaderInfoEquals(latestShaderInfo, shaderInfo)\n    ) {\n      if (shader) {\n        shader.dispose();\n        delete this._shader;\n      }\n      shader = glSurface._makeShader(shaderInfo);\n      this._latestShaderInfo = shaderInfo;\n      this._shader = shader;\n    }\n    return shader;\n  }\n\n  _draw(): void {\n    const { glSurface } = this.context;\n    const { gl } = glSurface;\n    const visitors = glSurface.getVisitors();\n    const nodeName = this.getGLName();\n    if (!gl || !this._needsRedraw) {\n      visitors.forEach((v) => v.onNodeDrawSkipped(this));\n      return;\n    }\n\n    const {\n      backbuffering,\n      uniforms,\n      uniformsOptions,\n      shader: shaderProp,\n      blendFunc,\n      clear,\n      onDraw,\n      ignoreUnusedUniforms,\n    } = this.drawProps;\n\n    //~ PREPARE phase\n\n    if (!this.framebuffer) {\n      const { glSizable } = this.context;\n      const [width, height] = glSizable.getGLSize();\n      const [nw, nh] = this.getGLSize();\n      invariant(\n        nw === width && nh === height,\n        nodeName +\n          \" is root but have overrided {width=%s,height=%s} which doesn't match Surface size {width=%s,height=%s}. \" +\n          \"Try to wrap your Node in a <NearestCopy> or <LinearCopy>\",\n        nw,\n        nh,\n        width,\n        height\n      );\n    }\n\n    const shader = this._getShader(shaderProp);\n\n    this._needsRedraw = false; // FIXME what's the correct position of this line?\n\n    const { types } = shader;\n    const glRedrawableDependencies: Array<Node | Bus> = [];\n    const pendingTextures: Array<*> = [];\n    let units = 0;\n    const usedUniforms = Object.keys(types.uniforms);\n    const providedUniforms = Object.keys(uniforms);\n    const { uniformsBus } = this;\n    for (let k in uniformsBus) {\n      if (!(k in uniforms)) {\n        providedUniforms.push(k);\n      }\n    }\n    const textureUnits: Map<WebGLTexture, number> = new Map();\n\n    const prepareTexture = (\n      initialObj: mixed,\n      uniformOptions: ?$Shape<TextureOptions>,\n      uniformKeyName: string\n    ) => {\n      let obj = initialObj,\n        dependency: ?(Node | Bus),\n        result: ?{\n          directTexture?: ?WebGLTexture,\n          directTextureSize?: ?[number, number],\n          glNode?: Node,\n          glNodePickBackbuffer?: boolean,\n        };\n\n      if (typeof obj === \"function\") {\n        // texture uniform can be a function that resolves the object at draw time.\n        obj = (obj: AsyncMixed)(this.redraw);\n      }\n\n      if (!obj) {\n        if (obj === undefined) {\n          console.warn(\n            `${nodeName}, uniform '${uniformKeyName}' is undefined.` +\n              \"If you explicitely want to clear a texture, set it to null.\"\n          );\n        }\n      } else if (isBackbuffer(obj)) {\n        // maybe it's backbuffer?\n        if (!this.drawProps.backbuffering) {\n          console.warn(\n            `${nodeName}, uniform ${uniformKeyName}: you must set \\`backbuffering\\` on Node when using Backbuffer`\n          );\n        }\n        result = { glNode: this, glNodePickBackbuffer: true };\n      } else if (isBackbufferFrom(obj)) {\n        // backbuffer of another node/bus\n        invariant(\n          typeof obj === \"object\",\n          \"invalid backbufferFromNode. Got: %s\",\n          obj\n        );\n        let node = obj.node;\n        if (node instanceof Bus) {\n          node = node.getGLRenderableNode();\n          invariant(\n            node,\n            \"backbufferFromNode(bus) but bus.getGLRenderableNode() is %s\",\n            node\n          );\n        }\n        invariant(\n          node instanceof Node,\n          \"invalid backbufferFromNode(obj): obj must be an instanceof Node or Bus. Got: %s\",\n          obj\n        );\n        if (!node.drawProps.backbuffering) {\n          console.warn(\n            `${nodeName}, uniform ${uniformKeyName}: you must set \\`backbuffering\\` on the Node referenced in backbufferFrom(${node.getGLName()})`\n          );\n        }\n        result = { glNode: node, glNodePickBackbuffer: true };\n      } else if (obj instanceof Node) {\n        // maybe it's a Node?\n        dependency = obj;\n        result = { glNode: obj };\n      } else if (obj instanceof Bus) {\n        // maybe it's a Bus?\n        // to a node?\n        const node = obj.getGLRenderableNode();\n        if (node) {\n          dependency = node;\n          result = { glNode: node };\n        } else {\n          // to a DOM/native element? (like <canvas>, <video>, ...)\n          dependency = obj;\n          const renderable: ?Element = obj.getGLRenderableContent();\n          if (!renderable) {\n            console.warn(\n              `${nodeName}, uniform ${uniformKeyName}: child is not renderable. Got:`,\n              renderable\n            );\n            result = { directTexture: null };\n          } else {\n            obj = renderable;\n          }\n        }\n      }\n\n      // In any remaining cases, we are asking texture loaders\n      // to concretely resolve the Texture.\n      if (!result && obj) {\n        const { loader, input } = glSurface._resolveTextureLoader(obj);\n        if (!loader) {\n          console.warn(\n            `${nodeName}, uniform ${uniformKeyName}: no loader found for value`,\n            input,\n            obj\n          );\n        } else {\n          const t = loader.get(input);\n          if (t) {\n            loader.update(input);\n            result = {\n              directTexture: t.texture,\n              directTextureSize: [t.width, t.height],\n            };\n          } else {\n            // otherwise, we will have to load it and postpone the rendering.\n            const p = loader.load(input);\n            pendingTextures.push(p);\n          }\n        }\n      }\n\n      // we also accumulate a dep, that will be used to build the gl graph.\n      if (dependency) glRedrawableDependencies.push(dependency);\n\n      const textureOptions = result ? uniformOptions : null;\n      const getMetaInfo = () => ({\n        initialObj,\n        obj,\n        dependency,\n        textureOptions,\n      });\n      const getSize = (): ?[number, number] => {\n        const fallback = [2, 2];\n        return result\n          ? \"directTextureSize\" in result\n            ? result.directTextureSize\n            : result.glNode\n            ? result.glNode.getGLSize()\n            : fallback\n          : fallback;\n      };\n      const prepare = () => {\n        const texture: WebGLTexture =\n          (result &&\n            (result.directTexture ||\n              (result.glNode &&\n                (result.glNodePickBackbuffer\n                  ? result.glNode.getGLBackbufferOutput()\n                  : result.glNode.getGLOutput())))) ||\n          glSurface.getEmptyTexture();\n        if (textureUnits.has(texture)) {\n          // FIXME different uniform options on a same texture is not supported\n          return textureUnits.get(texture);\n        }\n        const value = units++;\n        gl.activeTexture(gl.TEXTURE0 + value);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        applyTextureOptions(gl, textureOptions);\n        textureUnits.set(texture, value);\n        return value;\n      };\n      return {\n        getMetaInfo,\n        getSize,\n        prepare,\n      };\n    };\n\n    const prepareUniform = (key) => {\n      const uniformType = types.uniforms[key];\n      if (!uniformType) {\n        const ignoredWarn =\n          ignoreUnusedUniforms === true ||\n          (ignoreUnusedUniforms instanceof Array &&\n            ignoreUnusedUniforms.includes(key));\n        if (!ignoredWarn) {\n          console.warn(\n            `${nodeName} uniform '${key}' is not declared, nor used, in your shader code`\n          );\n        }\n        return { key, value: undefined };\n      }\n      const uniformValue = uniforms[key];\n      usedUniforms.splice(usedUniforms.indexOf(key), 1);\n\n      if (uniformType === \"sampler2D\") {\n        const uniformBus = uniformsBus[key];\n        const { getMetaInfo, prepare } = prepareTexture(\n          (uniformBus && uniformBus[0]) || uniformValue,\n          uniformsOptions[key],\n          key\n        );\n        return {\n          key,\n          type: uniformType,\n          getMetaInfo,\n          prepare,\n        };\n      } else if (uniformValue === Uniform.Resolution) {\n        return {\n          key,\n          type: uniformType,\n          value: this.getGLSize(),\n        };\n      } else if (isTextureSizeGetter(uniformValue)) {\n        invariant(\n          uniformValue && typeof uniformValue === \"object\",\n          \"unexpected textureSize object. Got: %s\",\n          uniformValue\n        );\n        const { getSize } = prepareTexture(uniformValue.obj, null, key);\n        const size = getSize();\n        if (!size) {\n          console.warn(\n            `${nodeName}, uniform ${key}: texture size is undetermined`\n          );\n        }\n        const value = uniformValue.ratio\n          ? size\n            ? size[0] / size[1]\n            : 1\n          : size || [0, 0];\n        return {\n          key,\n          type: uniformType,\n          value,\n        };\n      } else if (Array.isArray(uniformType) && uniformType[0] === \"sampler2D\") {\n        let values;\n        const uniformBus = uniformsBus[key];\n        const v = mergeArrays(\n          Array.isArray(uniformValue) ? uniformValue : [],\n          Array.isArray(uniformBus) ? uniformBus : []\n        );\n        if (!v.length) {\n          console.warn(\n            `${nodeName}, uniform '${key}' should be an array of textures.`\n          );\n          values = uniformType.map(() => null);\n        } else if (v.length !== uniformType.length) {\n          console.warn(\n            `${nodeName}, uniform '${key}' should be an array of exactly ${uniformType.length} textures (not ${v.length}).`\n          );\n          values = uniformType.map(() => null);\n        } else {\n          values = v;\n        }\n\n        const uniformOptions = uniformsOptions[key]; // TODO support array of options as well\n        const all = values.map((value, i) =>\n          prepareTexture(value, uniformOptions, key + \"[\" + i + \"]\")\n        );\n\n        return {\n          key,\n          type: uniformType,\n          getMetaInfo: () =>\n            all.reduce((acc, o) => acc.concat(o.getMetaInfo()), []),\n          prepare: () => all.map((o) => o.prepare()),\n        };\n      } else {\n        if (uniformValue === undefined) {\n          console.warn(`${nodeName}, uniform '${key}' is undefined.`);\n        }\n        return {\n          key,\n          type: uniformType,\n          value: uniformValue,\n        };\n      }\n    };\n    const preparedUniforms = providedUniforms.map(prepareUniform);\n\n    if (usedUniforms.length !== 0) {\n      console.warn(\n        nodeName +\n          \": Missing uniforms: \" +\n          usedUniforms.map((u) => `'${u}'`).join(\", \") +\n          \"\\n\" +\n          \"all uniforms must be provided \" +\n          \"because implementations might share and reuse a Shader Program\"\n      );\n    }\n\n    // if some textures are not ready, we freeze the rendering so it doesn't blink\n    if (pendingTextures.length > 0) {\n      Promise.all(pendingTextures).then(this.redraw);\n      // ^ FIXME \"cancel\" this promise if we ever come back in _draw()\n      visitors.forEach((v) => v.onNodeDrawSkipped(this));\n      return;\n    }\n\n    //~ the draw will happen, there is no more interruption cases.\n    visitors.forEach((v) => v.onNodeDrawStart(this));\n\n    const [additions, deletions] = this._syncDependencies(\n      glRedrawableDependencies\n    );\n    visitors.forEach((v) => v.onNodeSyncDeps(this, additions, deletions));\n\n    if (backbuffering) {\n      // swap framebuffer and backbuffer\n      const { backbuffer, framebuffer } = this;\n      this.backbuffer = framebuffer;\n      if (backbuffer) {\n        this.framebuffer = backbuffer;\n      }\n    }\n\n    //~ DRAW dependencies step\n    const drawDep = (d) => d._draw();\n    this.dependencies.forEach(drawDep);\n\n    //~ DRAW this node step\n\n    visitors.forEach((v) => v.onNodeDraw(this, preparedUniforms));\n\n    shader.bind();\n    this._bind();\n    preparedUniforms.forEach((obj) => {\n      const value = obj.prepare ? obj.prepare() : obj.value;\n      if (value !== undefined) {\n        shader.uniforms[obj.key] = value;\n      }\n    });\n\n    if (blendFunc) {\n      const src = mapBlendFunc(gl, blendFunc.src);\n      const dst = mapBlendFunc(gl, blendFunc.dst);\n      if (src && dst) gl.blendFunc(src, dst);\n    }\n\n    if (clear) {\n      gl.clearColor(...clear.color);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n\n    gl.drawArrays(gl.TRIANGLES, 0, 3);\n\n    if (onDraw) onDraw();\n\n    visitors.forEach((v) => v.onNodeDrawEnd(this));\n  }\n}\n"],"mappings":"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"}