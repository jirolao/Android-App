{"version":3,"file":"drawNDArrayTexture.js","names":["Buffer","global","b","isPacked","shape","stride","length","convertFloatToUint8","out","inp","ops","muls","gl","texture","array","floatSupported","isWebGL1","WebGLRenderingContext","dtype","slice","maxSize","getParameter","MAX_TEXTURE_SIZE","Error","packed","type","FLOAT","UNSIGNED_BYTE","format","internalformat","LUMINANCE","ndarray","data","offset","ALPHA","LUMINANCE_ALPHA","RGB","RGB32F","RGBA","RGBA32F","buffer","size","store","pool","malloc","assign","subarray","texImage2D","TEXTURE_2D","free"],"sources":["../src/drawNDArrayTexture.js"],"sourcesContent":["//@flow\nimport type { NDArray } from \"ndarray\";\nimport ndarray from \"ndarray\";\nimport ops from \"ndarray-ops\";\nimport pool from \"typedarray-pool\";\n\nif (typeof Buffer === \"undefined\") {\n  global.Buffer = class Buffer {\n    // mock shim so pool don't crash..\n    static isBuffer = (b) => b instanceof Buffer;\n  };\n}\n\n// code is partly taken from https://github.com/stackgl/gl-texture2d/blob/master/texture.js\n\nfunction isPacked(shape, stride) {\n  if (shape.length === 3) {\n    return (\n      stride[2] === 1 &&\n      stride[1] === shape[0] * shape[2] &&\n      stride[0] === shape[2]\n    );\n  }\n  return stride[0] === 1 && stride[1] === shape[0];\n}\n\nfunction convertFloatToUint8(out, inp) {\n  ops.muls(out, inp, 255.0);\n}\n\nexport default (\n  gl: WebGLRenderingContext,\n  texture: WebGLTexture,\n  array: NDArray,\n  floatSupported: boolean\n) => {\n  const isWebGL1 =\n    typeof WebGLRenderingContext === \"undefined\" ||\n    gl instanceof WebGLRenderingContext;\n\n  let dtype = array.dtype;\n  let shape = array.shape.slice();\n  let maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  if (\n    shape[0] < 0 ||\n    shape[0] > maxSize ||\n    shape[1] < 0 ||\n    shape[1] > maxSize\n  ) {\n    throw new Error(\"gl-react: Invalid texture size\");\n  }\n  let packed = isPacked(shape, array.stride.slice());\n  let type = 0;\n  if (dtype === \"float32\") {\n    type = gl.FLOAT;\n  } else if (dtype === \"float64\") {\n    type = gl.FLOAT;\n    packed = false;\n    dtype = \"float32\";\n  } else if (dtype === \"uint8\") {\n    type = gl.UNSIGNED_BYTE;\n  } else {\n    type = gl.UNSIGNED_BYTE;\n    packed = false;\n    dtype = \"uint8\";\n  }\n  let format = 0;\n  let internalformat = 0;\n  if (shape.length === 2) {\n    internalformat = format = gl.LUMINANCE;\n    shape = [shape[0], shape[1], 1];\n    array = ndarray(\n      array.data,\n      shape,\n      [array.stride[0], array.stride[1], 1],\n      array.offset\n    );\n  } else if (shape.length === 3) {\n    if (shape[2] === 1) {\n      internalformat = format = gl.ALPHA;\n      if (!isWebGL1) {\n        floatSupported = false; // eject from WebGL2 because it seems not to correctly have a internalfomat for this. need to use uint8\n      }\n    } else if (shape[2] === 2) {\n      internalformat = format = gl.LUMINANCE_ALPHA;\n      if (!isWebGL1) {\n        floatSupported = false; // eject from WebGL2 because it seems not to correctly have a internalfomat for this. need to use uint8\n      }\n    } else if (shape[2] === 3) {\n      format = gl.RGB;\n      internalformat = isWebGL1 ? gl.RGB : gl.RGB32F;\n    } else if (shape[2] === 4) {\n      format = gl.RGBA;\n      internalformat = isWebGL1 ? gl.RGBA : gl.RGBA32F;\n    } else {\n      throw new Error(\"gl-texture2d: Invalid shape for pixel coords\");\n    }\n  } else {\n    throw new Error(\"gl-texture2d: Invalid shape for texture\");\n  }\n  if (type === gl.FLOAT && !floatSupported) {\n    type = gl.UNSIGNED_BYTE;\n    packed = false;\n  }\n  let buffer;\n  let size = array.size;\n  let store;\n  if (!packed) {\n    let stride = [shape[2], shape[2] * shape[0], 1];\n    if (\n      (dtype === \"float32\" || dtype === \"float64\") &&\n      type === gl.UNSIGNED_BYTE\n    ) {\n      store = pool.malloc(size, \"uint8\");\n      let out = ndarray(store, shape, stride, 0);\n      convertFloatToUint8(out, array);\n    } else {\n      store = pool.malloc(size, dtype);\n      let out = ndarray(store, shape, stride, 0);\n      ops.assign(out, array);\n    }\n    buffer = store.subarray(0, size);\n  } else if (array.offset === 0 && array.data.length === size) {\n    buffer = array.data;\n  } else {\n    buffer = array.data.subarray(array.offset, array.offset + size);\n  }\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    internalformat,\n    shape[0],\n    shape[1],\n    0,\n    format,\n    type,\n    buffer\n  );\n  if (store) {\n    pool.free(store);\n  }\n};\n"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;AAEA,IAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;EAAA;;EACjCC,MAAM,CAACD,MAAP,aAAgB,MAAMA,MAAN,CAAa,EAA7B,sCAEqBE,CAAD,IAAOA,CAAC,YAAYF,MAFxC;AAID,C,CAED;;;AAEA,SAASG,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IACtB,OACED,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IACAA,MAAM,CAAC,CAAD,CAAN,KAAcD,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAD9B,IAEAC,MAAM,CAAC,CAAD,CAAN,KAAcD,KAAK,CAAC,CAAD,CAHrB;EAKD;;EACD,OAAOC,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IAAmBA,MAAM,CAAC,CAAD,CAAN,KAAcD,KAAK,CAAC,CAAD,CAA7C;AACD;;AAED,SAASG,mBAAT,CAA6BC,GAA7B,EAAkCC,GAAlC,EAAuC;EACrCC,mBAAA,CAAIC,IAAJ,CAASH,GAAT,EAAcC,GAAd,EAAmB,KAAnB;AACD;;eAEc,CACbG,EADa,EAEbC,OAFa,EAGbC,KAHa,EAIbC,cAJa,KAKV;EACH,MAAMC,QAAQ,GACZ,OAAOC,qBAAP,KAAiC,WAAjC,IACAL,EAAE,YAAYK,qBAFhB;EAIA,IAAIC,KAAK,GAAGJ,KAAK,CAACI,KAAlB;EACA,IAAId,KAAK,GAAGU,KAAK,CAACV,KAAN,CAAYe,KAAZ,EAAZ;EACA,IAAIC,OAAO,GAAGR,EAAE,CAACS,YAAH,CAAgBT,EAAE,CAACU,gBAAnB,CAAd;;EACA,IACElB,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,IACAA,KAAK,CAAC,CAAD,CAAL,GAAWgB,OADX,IAEAhB,KAAK,CAAC,CAAD,CAAL,GAAW,CAFX,IAGAA,KAAK,CAAC,CAAD,CAAL,GAAWgB,OAJb,EAKE;IACA,MAAM,IAAIG,KAAJ,CAAU,gCAAV,CAAN;EACD;;EACD,IAAIC,MAAM,GAAGrB,QAAQ,CAACC,KAAD,EAAQU,KAAK,CAACT,MAAN,CAAac,KAAb,EAAR,CAArB;EACA,IAAIM,IAAI,GAAG,CAAX;;EACA,IAAIP,KAAK,KAAK,SAAd,EAAyB;IACvBO,IAAI,GAAGb,EAAE,CAACc,KAAV;EACD,CAFD,MAEO,IAAIR,KAAK,KAAK,SAAd,EAAyB;IAC9BO,IAAI,GAAGb,EAAE,CAACc,KAAV;IACAF,MAAM,GAAG,KAAT;IACAN,KAAK,GAAG,SAAR;EACD,CAJM,MAIA,IAAIA,KAAK,KAAK,OAAd,EAAuB;IAC5BO,IAAI,GAAGb,EAAE,CAACe,aAAV;EACD,CAFM,MAEA;IACLF,IAAI,GAAGb,EAAE,CAACe,aAAV;IACAH,MAAM,GAAG,KAAT;IACAN,KAAK,GAAG,OAAR;EACD;;EACD,IAAIU,MAAM,GAAG,CAAb;EACA,IAAIC,cAAc,GAAG,CAArB;;EACA,IAAIzB,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IACtBuB,cAAc,GAAGD,MAAM,GAAGhB,EAAE,CAACkB,SAA7B;IACA1B,KAAK,GAAG,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqB,CAArB,CAAR;IACAU,KAAK,GAAG,IAAAiB,gBAAA,EACNjB,KAAK,CAACkB,IADA,EAEN5B,KAFM,EAGN,CAACU,KAAK,CAACT,MAAN,CAAa,CAAb,CAAD,EAAkBS,KAAK,CAACT,MAAN,CAAa,CAAb,CAAlB,EAAmC,CAAnC,CAHM,EAINS,KAAK,CAACmB,MAJA,CAAR;EAMD,CATD,MASO,IAAI7B,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IAC7B,IAAIF,KAAK,CAAC,CAAD,CAAL,KAAa,CAAjB,EAAoB;MAClByB,cAAc,GAAGD,MAAM,GAAGhB,EAAE,CAACsB,KAA7B;;MACA,IAAI,CAAClB,QAAL,EAAe;QACbD,cAAc,GAAG,KAAjB,CADa,CACW;MACzB;IACF,CALD,MAKO,IAAIX,KAAK,CAAC,CAAD,CAAL,KAAa,CAAjB,EAAoB;MACzByB,cAAc,GAAGD,MAAM,GAAGhB,EAAE,CAACuB,eAA7B;;MACA,IAAI,CAACnB,QAAL,EAAe;QACbD,cAAc,GAAG,KAAjB,CADa,CACW;MACzB;IACF,CALM,MAKA,IAAIX,KAAK,CAAC,CAAD,CAAL,KAAa,CAAjB,EAAoB;MACzBwB,MAAM,GAAGhB,EAAE,CAACwB,GAAZ;MACAP,cAAc,GAAGb,QAAQ,GAAGJ,EAAE,CAACwB,GAAN,GAAYxB,EAAE,CAACyB,MAAxC;IACD,CAHM,MAGA,IAAIjC,KAAK,CAAC,CAAD,CAAL,KAAa,CAAjB,EAAoB;MACzBwB,MAAM,GAAGhB,EAAE,CAAC0B,IAAZ;MACAT,cAAc,GAAGb,QAAQ,GAAGJ,EAAE,CAAC0B,IAAN,GAAa1B,EAAE,CAAC2B,OAAzC;IACD,CAHM,MAGA;MACL,MAAM,IAAIhB,KAAJ,CAAU,8CAAV,CAAN;IACD;EACF,CApBM,MAoBA;IACL,MAAM,IAAIA,KAAJ,CAAU,yCAAV,CAAN;EACD;;EACD,IAAIE,IAAI,KAAKb,EAAE,CAACc,KAAZ,IAAqB,CAACX,cAA1B,EAA0C;IACxCU,IAAI,GAAGb,EAAE,CAACe,aAAV;IACAH,MAAM,GAAG,KAAT;EACD;;EACD,IAAIgB,MAAJ;EACA,IAAIC,IAAI,GAAG3B,KAAK,CAAC2B,IAAjB;EACA,IAAIC,KAAJ;;EACA,IAAI,CAAClB,MAAL,EAAa;IACX,IAAInB,MAAM,GAAG,CAACD,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA3B,EAAgC,CAAhC,CAAb;;IACA,IACE,CAACc,KAAK,KAAK,SAAV,IAAuBA,KAAK,KAAK,SAAlC,KACAO,IAAI,KAAKb,EAAE,CAACe,aAFd,EAGE;MACAe,KAAK,GAAGC,uBAAA,CAAKC,MAAL,CAAYH,IAAZ,EAAkB,OAAlB,CAAR;MACA,IAAIjC,GAAG,GAAG,IAAAuB,gBAAA,EAAQW,KAAR,EAAetC,KAAf,EAAsBC,MAAtB,EAA8B,CAA9B,CAAV;MACAE,mBAAmB,CAACC,GAAD,EAAMM,KAAN,CAAnB;IACD,CAPD,MAOO;MACL4B,KAAK,GAAGC,uBAAA,CAAKC,MAAL,CAAYH,IAAZ,EAAkBvB,KAAlB,CAAR;MACA,IAAIV,GAAG,GAAG,IAAAuB,gBAAA,EAAQW,KAAR,EAAetC,KAAf,EAAsBC,MAAtB,EAA8B,CAA9B,CAAV;;MACAK,mBAAA,CAAImC,MAAJ,CAAWrC,GAAX,EAAgBM,KAAhB;IACD;;IACD0B,MAAM,GAAGE,KAAK,CAACI,QAAN,CAAe,CAAf,EAAkBL,IAAlB,CAAT;EACD,CAfD,MAeO,IAAI3B,KAAK,CAACmB,MAAN,KAAiB,CAAjB,IAAsBnB,KAAK,CAACkB,IAAN,CAAW1B,MAAX,KAAsBmC,IAAhD,EAAsD;IAC3DD,MAAM,GAAG1B,KAAK,CAACkB,IAAf;EACD,CAFM,MAEA;IACLQ,MAAM,GAAG1B,KAAK,CAACkB,IAAN,CAAWc,QAAX,CAAoBhC,KAAK,CAACmB,MAA1B,EAAkCnB,KAAK,CAACmB,MAAN,GAAeQ,IAAjD,CAAT;EACD;;EACD7B,EAAE,CAACmC,UAAH,CACEnC,EAAE,CAACoC,UADL,EAEE,CAFF,EAGEnB,cAHF,EAIEzB,KAAK,CAAC,CAAD,CAJP,EAKEA,KAAK,CAAC,CAAD,CALP,EAME,CANF,EAOEwB,MAPF,EAQEH,IARF,EASEe,MATF;;EAWA,IAAIE,KAAJ,EAAW;IACTC,uBAAA,CAAKM,IAAL,CAAUP,KAAV;EACD;AACF,C"}